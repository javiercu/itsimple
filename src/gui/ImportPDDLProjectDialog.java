/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewPDDLProjectDialog.java
 *
 * Created on Jun 4, 2012, 12:48:37 PM
 */

package src.gui;

import java.awt.Frame;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
//import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.output.XMLOutputter;

import src.util.filefilter.PDDLFileFilter;

/**
 *
 * @author sanpedro
 */
public class ImportPDDLProjectDialog extends javax.swing.JDialog
{
    private File projectFolder, domainFile;
    private String projectName, projectFolderPath;
    private Frame parent;
    private boolean canOpen = false;

    /** Creates new form NewPDDLProjectDialog */
    public ImportPDDLProjectDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
    }

//    private void createPDDLFile(String filename, String data)
//    {
//        File pddlFile;
//        pddlFile = new File(projectFolder + "/" + filename + ".pddl");
//        try
//        {
//            pddlFile.createNewFile();
//            //System.out.println("New file \"myfile.txt\" has been created to the current directory");
//        }
//        catch (IOException ex)
//        {
//            Logger.getLogger(ImportPDDLProjectDialog.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//
//        BufferedWriter writer;
//        try
//        {
//            writer = new BufferedWriter(new FileWriter(pddlFile));
//            writer.write(data);
//            writer.flush();
//        }
//        catch (IOException ex)
//        {
//            Logger.getLogger(ImportPDDLProjectDialog.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    private void createItProjectFile()
    {
        XMLOutputter outputter = new XMLOutputter();
        FileWriter file;
        Document doc = null;

        Element root = new Element("pddlproject");
        root.addContent(new Element("name").setText(projectName));
        root.addContent(new Element("description"));

        Element generalInfo = new Element("generalInformation");
        generalInfo.addContent(new Element("tool").setText("itSIMPLE"));
        generalInfo.addContent(new Element("version").setText("4.0.10"));
        root.addContent(generalInfo);

        Element pddldomains = new Element("pddldomains");
        Element pddldomain = new Element("pddldomain");
        pddldomain.addContent(new Element("name").setText(domainFile.getName()));
        pddldomains.addContent(pddldomain);
        root.addContent(pddldomains);
        root.addContent(new Element("problemFolder"));
        root.addContent(new Element("problemInstances"));

        doc = new Document(root);
        String filePath = projectFolderPath+"/itProject.xml";
        try
        {
            file = new FileWriter(filePath);
            outputter.output(doc, file);
            file.close();
        }
        catch (IOException ex) {
            Logger.getLogger(ImportPDDLProjectDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String getPDDLProjectFilePath()
    {
        return projectFolderPath + "/itProject.xml";
    }

    public boolean isCanOpen() {
        return canOpen;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import PDDL Project");
        setLocationByPlatform(true);

        jLabel1.setText("Project Name:");

        jLabel2.setText("Domain File:");

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Note", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jLabel3.setText("All problem instances must be in the same folder as the ");

        jLabel4.setText("domain file to be detected. Subfolders will not be considered.");

        jLabel5.setText("Only one domain file is allowed in this version.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String lastOpenFolder = "";
        Element lastOpenFolderElement = ItSIMPLE.getItSettings().getChild("generalSettings").getChild("lastOpenFolder");
        if (lastOpenFolderElement != null)
            lastOpenFolder = lastOpenFolderElement.getText();

        JFileChooser fc = new JFileChooser(lastOpenFolder);
        fc.setDialogTitle("Select Domain File");
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.setFileFilter(new PDDLFileFilter());

        int returnVal = fc.showOpenDialog(ItSIMPLE.getItSIMPLEFrame());
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            domainFile = fc.getSelectedFile();
            projectFolderPath = domainFile.getParent();
            jTextField2.setText(domainFile.getPath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        projectName = jTextField1.getText();
        if (projectName.equals(""))
        {
            JOptionPane.showMessageDialog(
                                        this.parent,
                                        "Sorry, project's name could not be blank"/* + typedText + "\" "
                                        + "isn't a valid response.\n"
                                        + "Please enter "
                                        + magicWord */+ ".",
                                        "Name Error",
                                        JOptionPane.ERROR_MESSAGE);
            //typedText = null;
            jTextField1.requestFocusInWindow();
        }
        else if (domainFile == null)
        {
            JOptionPane.showMessageDialog(
                                        this.parent,
                                        "Sorry, the domain file could not be blank"/* + typedText + "\" "
                                        + "isn't a valid response.\n"
                                        + "Please enter "
                                        + magicWord */+ ".",
                                        "Domain File Error",
                                        JOptionPane.ERROR_MESSAGE);
            //typedText = null;
            jTextField2.requestFocusInWindow();
        }
        else
        {
//            String domainData = "(define (domain "+projectName+")\n"+
//                       "(:requirements :typing)\n\n" +
//                       "(:types\n\n" +
//                       ")\n\n" +
//                       "(:predicates\n\n" +
//                       ")\n\n\n" +
//                       ")";
//            createPDDLFile("domain", domainData);
//
//            String problemData = "(define (problem problem1)\n"+
//                                 "(:domain "+projectName+")\n"+
//                                 "(:objects\n\n"+
//                                 ")\n\n"+
//                                 "(:init\n\n"+
//                                 ")\n\n"+
//                                 "(:goal\n\n"+
//                                 ")\n"+
//                                 ")";
//            createPDDLFile("problem", problemData);
            createItProjectFile();
            canOpen = true;
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton3ActionPerformed


//    /**
//    * @param args the command line arguments
//    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                NewPDDLProjectDialog dialog = new NewPDDLProjectDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
